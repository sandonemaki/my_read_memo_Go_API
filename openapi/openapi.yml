openapi: '3.0.3'
info:
  title: Yondeco
  version: '1.0.0-oas3.0.3'
security:
  - BearerAuth: []
servers:
  - url: https://sample.com
paths:
  /users/me:
    get:
      tags:
        - users
      summary: 現在のユーザー情報を取得
      description: 認証されたユーザーの詳細情報を取得します
      operationId: GetMe
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - users
      summary: 現在のユーザー情報を更新
      description: 認証されたユーザーの情報を更新します
      operationId: UpdateMe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: ユーザー情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - users
      summary: 現在のユーザーアカウントを削除
      description: 認証されたユーザーのアカウントを削除します（論理削除）
      operationId: DeleteMe
      responses:
        '204':
          description: ユーザー削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /authors/{id}:
    get:
      tags:
        - authors
      summary: 著者情報を取得
      description: 指定されたIDの著者の詳細情報を取得します
      operationId: GetAuthorById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: 著者の一意識別子
      responses:
        '200':
          description: 著者情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /authors:
    get:
      tags:
        - authors
      summary: 著者一覧を取得
      description: 登録されている全ての著者の一覧を取得します
      operationId: GetAuthors
      responses:
        '200':
          description: 著者一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  authors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'
                required:
                  - authors
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags:
        - authors
      summary: 著者を新規作成
      description: 新しい著者を登録します
      operationId: CreateAuthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthor'
      responses:
        '201':
          description: 著者作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: 既に同じ名前の著者が存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /authors/search:
    get:
      tags:
        - authors
      summary: 著者を名前で検索
      description: 著者名で部分一致検索を行います
      operationId: SearchAuthors
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 100
          description: 検索する著者名（部分一致）
          example: "村上"
      responses:
        '200':
          description: 検索結果取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  authors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'
                required:
                  - authors
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /publishers/{id}:
    get:
      tags:
        - publishers
      summary: 出版社情報を取得
      description: 指定されたIDの出版社の詳細情報を取得します
      operationId: GetPublisherById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: 出版社の一意識別子
      responses:
        '200':
          description: 出版社情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /publishers:
    get:
      tags:
        - publishers
      summary: 出版社一覧を取得
      description: 登録されている全ての出版社の一覧を取得します
      operationId: GetPublishers
      responses:
        '200':
          description: 出版社一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  publishers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Publisher'
                required:
                  - publishers
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - publishers
      summary: 出版社を新規作成
      description: 新しい出版社を登録します
      operationId: CreatePublisher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublisher'
      responses:
        '201':
          description: 出版社作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: 既に同じ名前の出版社が存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /publishers/search:
    get:
      tags:
        - publishers
      summary: 出版社を名前で検索
      description: 出版社名で部分一致検索を行います
      operationId: SearchPublishers
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 100
          description: 検索する出版社名（部分一致）
          example: "講談"
      responses:
        '200':
          description: 検索結果取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  publishers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Publisher'
                required:
                  - publishers
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /master-books:
    get:
      tags:
        - master_books
      summary: マスターブック一覧を取得
      description: 認証ユーザーが登録した本の一覧を取得します
      operationId: GetMasterBooks
      responses:
        '200':
          description: マスターブック一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/MasterBook'
                required:
                  - books
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags:
        - master_books
      summary: マスターブックを新規作成
      description: 新しい本を登録します
      operationId: CreateMasterBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMasterBook'
      responses:
        '201':
          description: マスターブック作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterBookResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Firebase認証IDトークン
        ヘッダー形式: `Authorization: Bearer <firebase_id_token>`

  responses:
    BadRequest:
      description: リクエストが無効です
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: 認証が必要です
    NotFound:
      description: リソースが見つかりません
    InternalServerError:
      description: サーバー内部エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    UserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
      required:
        - user
    UpdateUser:
      type: object
      properties:
        display_name:
          type: string
          description: ユーザー表示名
          example: "山田次郎"
          minLength: 1
          maxLength: 100
      required:
        - display_name
    CreateAuthor:
      type: object
      properties:
        name:
          type: string
          description: 著者名
          example: "村上春樹"
          minLength: 1
          maxLength: 100
      required:
        - name

    User:
      type: object
      properties:
        ulid:
          type: string
          description: ユーザーの一意識別子（ULID形式）
          example: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
          minLength: 26
          maxLength: 26
        uid:
          type: string
          description: Firebase認証UID
          example: "firebase_uid_123456789"
          minLength: 1
        display_name:
          type: string
          description: ユーザー表示名
          example: "山田太郎"
          minLength: 1
          maxLength: 100
        deleted_at:
          type: string
          format: date-time
          description: アカウント削除日時（論理削除）
          example: "2024-01-01T00:00:00Z"
          nullable: true
        created_at:
          type: string
          format: date-time
          description: アカウント作成日時
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: 最終更新日時
          example: "2024-01-01T00:00:00Z"
      required:
        - ulid
        - uid
        - display_name
        - created_at
        - updated_at
    
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 著者の一意識別子
          example: 1
        name:
          type: string
          description: 著者名
          example: "村上春樹"
          minLength: 1
          maxLength: 100
        created_at:
          type: string
          format: date-time
          description: 作成日時
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: 最終更新日時
          example: "2024-01-01T00:00:00Z"
      required:
        - id
        - name
        - created_at
        - updated_at
    
    AuthorResponse:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/Author'
      required:
        - author
    
    Publisher:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 出版社の一意識別子
          example: 1
        name:
          type: string
          description: 出版社名
          example: "講談社"
          minLength: 1
          maxLength: 100
        created_at:
          type: string
          format: date-time
          description: 作成日時
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: 最終更新日時
          example: "2024-01-01T00:00:00Z"
      required:
        - id
        - name
        - created_at
        - updated_at
    
    PublisherResponse:
      type: object
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
      required:
        - publisher
    
    CreatePublisher:
      type: object
      properties:
        name:
          type: string
          description: 出版社名
          example: "講談社"
          minLength: 1
          maxLength: 100
      required:
        - name
    MasterBook:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 本の一意識別子
          example: 1
        title:
          type: string
          description: 本のタイトル
          example: "ノルウェイの森"
          minLength: 1
          maxLength: 200
        author_id:
          type: integer
          format: int64
          description: 著者の一意識別子
          example: 1
        publisher_id:
          type: integer
          format: int64
          description: 出版社の一意識別子
          example: 1
        total_page:
          type: integer
          description: 総ページ数
          example: 400
          minimum: 1
          maximum: 9999
        isbn:
          type: string
          description: ISBN
          example: "9784087520439"
          maxLength: 13
        cover_s3_url:
          type: string
          description: 表紙画像のS3 URL
          example: "https://s3.example.com/covers/book123.jpg"
          maxLength: 255
        published_at:
          type: string
          format: date
          description: 出版日
          example: "2024-01-01"
          nullable: true
        created_at:
          type: string
          format: date-time
          description: 作成日時
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: 最終更新日時
          example: "2024-01-01T00:00:00Z"
      required:
        - id
        - title
        - author_id
        - publisher_id
        - total_page
        - created_at
        - updated_at

    CreateMasterBook:
      type: object
      properties:
        title:
          type: string
          description: 本のタイトル
          example: "ノルウェイの森"
          minLength: 1
          maxLength: 200
        author_id:
          type: integer
          format: int64
          description: 著者の一意識別子
          example: 1
        publisher_id:
          type: integer
          format: int64
          description: 出版社の一意識別子
          example: 1
        total_page:
          type: integer
          description: 総ページ数
          example: 400
          minimum: 1
          maximum: 9999
        isbn:
          type: string
          description: ISBN（任意）
          example: "9784087520439"
          maxLength: 13
        cover_s3_url:
          type: string
          description: 表紙画像のS3 URL（任意）
          example: "https://s3.example.com/covers/book123.jpg"
          maxLength: 255
        published_at:
          type: string
          format: date
          description: 出版日（任意）
          example: "2024-01-01"
      required:
        - title
        - author_id
        - publisher_id
        - total_page

    MasterBookResponse:
      type: object
      properties:
        book:
          $ref: '#/components/schemas/MasterBook'
      required:
        - book
