openapi: '3.0.3'
info:
  title: Yondeco
  version: '1.0.0-oas3.0.3'
security:
  - BearerAuth: []
servers:
  - url: https:/.sample.com
paths:
  /users/me:
    get:
      tags:
        - users
      summary: 現在のユーザー情報を取得
      description: 認証されたユーザーの詳細情報を取得します
      operationId: GetMe
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - users
      summary: 現在のユーザー情報を更新
      description: 認証されたユーザーの情報を更新します
      operationId: UpdateMe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: ユーザー情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - users
      summary: 現在のユーザーアカウントを削除
      description: 認証されたユーザーのアカウントを削除します（論理削除）
      operationId: DeleteMe
      responses:
        '204':
          description: ユーザー削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Firebase認証IDトークン
        
        ヘッダー形式: `Authorization: Bearer <firebase_id_token>`

  responses:
    BadRequest:
      description: リクエストが無効です
    Unauthorized:
      description: 認証が必要です
    NotFound:
      description: リソースが見つかりません
    InternalServerError:
      description: サーバー内部エラー

  schemas:
    UserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
      required:
        - user
    UpdateUser:
      type: object
      properties:
        display_name:
          type: string
          description: ユーザー表示名
          example: "山田次郎"
          minLength: 1
          maxLength: 100
      required:
        - display_name

    User:
      type: object
      properties:
        ulid:
          type: string
          description: ユーザーの一意識別子（ULID形式）
          example: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
          minLength: 26
          maxLength: 26
        uid:
          type: string
          description: Firebase認証UID
          example: "firebase_uid_123456789"
          minLength: 1
        display_name:
          type: string
          description: ユーザー表示名
          example: "山田太郎"
          minLength: 1
          maxLength: 100
        deleted_at:
          type: string
          format: date-time
          description: アカウント削除日時（論理削除）
          example: "2024-01-01T00:00:00Z"
          nullable: true
        created_at:
          type: string
          format: date-time
          description: アカウント作成日時
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: 最終更新日時
          example: "2024-01-01T00:00:00Z"
      required:
        - ulid
        - uid
        - display_name
        - created_at
        - updated_at

    


